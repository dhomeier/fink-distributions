diff -Nurd dosbox-0.74.orig/src/gui/sdlmain.cpp dosbox-0.74/src/gui/sdlmain.cpp
--- dosbox-0.74.orig/src/gui/sdlmain.cpp	2018-03-14 09:29:47.000000000 -0400
+++ dosbox-0.74/src/gui/sdlmain.cpp	2018-03-14 09:31:05.000000000 -0400
@@ -1134,10 +1134,10 @@
 #endif
 	const char * gl_ext = (const char *)glGetString (GL_EXTENSIONS);
 	if(gl_ext && *gl_ext){
-		sdl.opengl.packed_pixel=(strstr(gl_ext,"EXT_packed_pixels") > 0);
-		sdl.opengl.paletted_texture=(strstr(gl_ext,"EXT_paletted_texture") > 0);
+		sdl.opengl.packed_pixel=(strstr(gl_ext,"EXT_packed_pixels") != 0);
+		sdl.opengl.paletted_texture=(strstr(gl_ext,"EXT_paletted_texture") != 0);
 #if defined(NVIDIA_PixelDataRange)
-		sdl.opengl.pixel_data_range=(strstr(gl_ext,"GL_NV_pixel_data_range") >0 ) &&
+		sdl.opengl.pixel_data_range=(strstr(gl_ext,"GL_NV_pixel_data_range") != 0 ) &&
 			glPixelDataRangeNV && db_glAllocateMemoryNV && db_glFreeMemoryNV;
 		sdl.opengl.pixel_data_range = 0;
 #endif
@@ -1529,7 +1529,7 @@
 	if ( !sdl.inited && SDL_Init(SDL_INIT_VIDEO|SDL_INIT_NOPARACHUTE) < 0 ) textonly = true;
 	sdl.inited = true;
 #endif
-	printf(message);
+	printf("%s", message);
 	if(textonly) return;
 	if(!sdl.surface) sdl.surface = SDL_SetVideoMode(640,400,0,0);
 	if(!sdl.surface) return;
diff -Nurd dosbox-0.74.orig/src/misc/setup.cpp dosbox-0.74/src/misc/setup.cpp
--- dosbox-0.74.orig/src/misc/setup.cpp	2018-03-14 09:29:47.000000000 -0400
+++ dosbox-0.74/src/misc/setup.cpp	2018-03-14 10:05:03.000000000 -0400
@@ -271,7 +271,7 @@
 			return true;
 		}
 		if((*it).ToString() == "%u") {
-			Bitu value;
+			Bit32u value;
 			if(sscanf(in.ToString().c_str(),"%u",&value) == 1) {
 				return true;
 			}
@@ -633,7 +633,7 @@
 			}
 			i=0;
 			char prefix[80];
-			snprintf(prefix,80, "\n# %*s  ", maxwidth, "");
+			snprintf(prefix,80, "\n# %*s  ", (int)maxwidth, "");
 			while ((p = sec->Get_prop(i++))) {		
 				std::string help = p->Get_help();
 				std::string::size_type pos = std::string::npos;
@@ -641,7 +641,7 @@
 					help.replace(pos, 1, prefix);
 				}
 		     
-				fprintf(outfile, "# %*s: %s", maxwidth, p->propname.c_str(), help.c_str());
+				fprintf(outfile, "# %*s: %s", (int)maxwidth, p->propname.c_str(), help.c_str());
 
 				std::vector<Value> values = p->GetValues();
 				if (!values.empty()) {
