Info2: <<

Package: matplotlib-py27
Version: 2.2.5
Revision: 1
Source: https://files.pythonhosted.org/packages/source/m/matplotlib/matplotlib-%v.tar.gz
Source-Checksum: SHA256(a3037a840cd9dfdc2df9fee8af8f76ca82bfab173c0f9468193ca7a89a2b60ea)
Source2: http://download.savannah.gnu.org/releases/freetype/freetype-2.6.1.tar.gz
Source2-MD5: 348e667d728c597360e4a87c16556597

Type: python (2.7)

Maintainer: Derek Homeier <dhomeie@gwdg.de>
Depends: <<
 atk1-shlibs (>= 1.32.0-1),
 cairo-shlibs (>= 1.12.14-1),
 cycler-py%type_pkg[python] (>= 0.10.0-1),
 dateutil-py%type_pkg[python],
 fontconfig2-shlibs (>= 2.10.0-1),
 freetype219-shlibs (>= 2.6-1),
 glib2-shlibs (>= 2.22.0-1),
 gtk+2-shlibs (>= 2.18.0-1),
 kiwisolver-py%type_pkg[python],
 libpng16-shlibs,
 pango1-xft2-ft219-shlibs (>= 1.24.5-4),
 poppler-bin,
 python%type_pkg[python],
 pyparsing-py%type_pkg[python],
 pyqt4-mac-py%type_pkg[python],
 pyqt5-mac-py%type_pkg[python],
 pytz-py%type_pkg[python],
 numpy-py%type_pkg[python],
 sip-pyqt4-py%type_pkg[python] (>= 4.19.22-1),
 sip-pyqt5-py%type_pkg[python] (>= 4.19.22-1),
 six-py%type_pkg[python] (>= 1.4.0-1),
 tcltk-shlibs,
 tetex-base,
 tornado-py%type_pkg[python],
 wxpython400-py%type_pkg[python],
 x11-shlibs,
 pygtk2-gtk-py%type_pkg[python]
<<

BuildDepends: <<
 atk1 (>= 1.32.0-1),
 cairo (>= 1.12.14-1),
 fink-package-precedence,
 fontconfig2-dev (>= 2.10.0-1),
 freetype219 (>= 2.6-1),
 glib2-dev (>= 2.22.0-1),
 gtk+2-dev (>= 2.18.0-1),
 libpng16,
 pango1-xft2-ft219-dev (>= 1.24.5-4),
 pkgconfig (>= 0.21-1),
 setuptools-tng-py%type_pkg[python],
 tcltk-dev,
 tornado-py%type_pkg[python],
 wxpython400-py%type_pkg[python],
 x11-dev,
 pygtk2-gtk-py%type_pkg[python]-dev
<<

Recommends: <<
 ffmpeg,
 imagemagick,
 ipython-py%type_pkg[python],
 pil-py%type_pkg[python]
<<

BuildConflicts: qhull5-dev, qhull6-dev, qhull6.3.1-dev, qhull7.2-dev

GCC: 4.0

NoSetCPPFLAGS: True
SetCPPFLAGS: -I%p/include/pygtk-2.0 -DNSIG=32 -MD
SetCXXFLAGS: -MD
SetLDFLAGS: -L%p/lib -lz -lbz2 -lpng16
UseMaxBuildJobs: True

PatchFile: %{ni}.patch
PatchFile-MD5: f15a8c2f4fef95677cbfb20cb8481f72
PatchScript: sed 's|@PREFIX@|%p|g' < %{PatchFile} | patch -p1

CompileScript:  <<
 #!/bin/sh -ev
 cp -a setup.cfg{.template,}
 # build against a local copy of freetype-2.6.1 to ensure exact version match
 # (set via SetMFLAGS in TestInfo; should we set this unconditionally?):
 mkdir build
 mv ../freetype-2.6.1 build
 export MPLLOCALFREETYPE="$MFLAGS"
 export PKG_CONFIG_PATH="%p/lib/glib-2.0/pkgconfig-strict:$PKG_CONFIG_PATH"
 OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES %p/bin/python%type_raw[python] setup.py build
 fink-package-precedence --depfile-ext='\.d' build
<<

InfoTest: <<
 TestSource: http://download.savannah.gnu.org/releases/freetype/freetype-2.6.1.tar.gz
 TestSource-MD5: 348e667d728c597360e4a87c16556597
 TestDepends: <<
  ffmpeg,
  inkscape,
  pytest-py%type_pkg[python],
  backports.functools-lru-cache-py%type_pkg[python],
  mock-py%type_pkg[python],
  subprocess32-py%type_pkg[python]
 <<
 SetMFLAGS: True
 TestConfigureParams: --local_freetype=True
 TestScript: <<
  # conftest.py throws import errors when trying to run tests anywhere but in the
  # directory matplotlib is imported from - remove them again before installation,
  # as they would also triple install size.
  rsync -aC lib/matplotlib/tests build/lib.macosx-*-%type_raw[python]/matplotlib
  rsync -aC lib/matplotlib/sphinxext/tests build/lib.macosx-*-%type_raw[python]/matplotlib/sphinxext
  rsync -aC lib/mpl_toolkits/tests build/lib.macosx-*-%type_raw[python]/mpl_toolkits
  # warnings if flaky extension is not installed, but with it some tests fail on
  # passing a 'reruns' kwarg that is unknown to any version of flaky 3.x.
  perl -pi -e 's|(mark.flaky.)(reruns=)(.)|${1}max_runs=${3}, min_passes=2|;' build/lib.macosx-*-%type_raw[python]/matplotlib/tests/test_back*.py
  perl -pi -e 's|(mark.flaky.)(reruns=)(.)|${1}max_runs=${3}, min_passes=1|;' build/lib.macosx-*-%type_raw[python]/matplotlib/tests/test_lines.py
  # pytest can end up importing mpl_toolkits from %p/lib/python* (without tests)
  # regardless of sys.path unless running from the eventual install dir in %i,
  # so defer actual running of the tests to Install phase.
 <<
 TestSuiteSize: large
<<

InstallScript: <<
 #!/bin/sh -ev
 export PKG_CONFIG_PATH="%p/lib/glib-2.0/pkgconfig-strict:$PKG_CONFIG_PATH"
 OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES %p/bin/python%type_raw[python] setup.py install --root %d
 export LANG=en_US.UTF-8 PYTHONPATH=%i/lib/python%type_raw[python]/site-packages
 # Check if tests have been installed and setup (for `--tests`)
 if [ -d ${PYTHONPATH}/matplotlib/tests ]; then
  cd $PYTHONPATH
  # Seems unable to import mpl_toolkits even directly from $PYTHONPATH if matplotlib is not already installed.
  if (%p/bin/python%type_raw[python] -Bc 'import mpl_toolkits'); then
   %p/bin/python%type_raw[python] -Bm pytest -k 'not (_pdflatex or _rcupdate)' || exit 2
  else
   %p/bin/python%type_raw[python] -Bm pytest -k 'not (_pdflatex or _rcupdate or _polycollection_close or _parasite)' matplotlib || exit 2
  fi
  rm -r matplotlib/tests matplotlib/sphinxext/tests mpl_toolkits/tests result_images .pytest_cache
 fi
<<

License: OSI-Approved
DocFiles: README.rst INSTALL.rst examples tutorials
# API_CHANGES
Description: Pure python 2D plotting with a Matlab syntax
DescDetail: <<
Produces publication quality figures using in a variety of hardcopy 
formats (PNG, JPG, TIFF, PS) and interactive GUI environments
across platforms. matplotlib can be used in python scripts,
interactively from the python shell (ala matlab or mathematica), 
in web application servers generating dynamic charts, or embedded 
in applications.

Includes GTK, TkAgg, GTKAgg, WxAgg, SVG, PS and Agg backends.
<<
DescPackaging: <<
 Checks for qt, qt4, cairo (their python bindings) but doesn't use
 those test results, so don't bother setting dependencies or forcing
 non-detection of them.
 Added dependencies on six-py, and poppler-bin for pdftops.
 Recommended optional dependencies:
  ImageMagick: for animation module to be able to save to animated gif
  ffmpeg: for animation module to be able to save to movie formats
  pil-py: read and write a larger selection of image file formats

 qhull not recognised by pkg-config; as of 2.1 requires version 2015.2 / 7.2,
 but mpl does not link against the reentrant version (libqhull_r.dylib) -
 falling back to the local copy until mpl is converted to libqhull_r or we
 find a way to install the non-reentrant dylib with libqhull-shlibs as well.
 (cf. http://www.qhull.org/html/qh-code.htm#reentrant .)
 The 'save to file' interface emits debugging messages with qt4 and ipython.
 Tried to build against wxpython300, but python segfaults either on
 exit (with ipython) or plotting (without); wxpython400 appears to be not
 recognised on configuration, but the WXAgg backend is built and linked
 against it.

 Multiprocessing in setupext BackendQtBase.check_requirements tends to hang
 in the build sandbox - trying a second pass after timeout, but on 10.13 fork()
 inevitably fails, apparently related to this thread safety issue:
 https://blog.phusion.nl/2017/10/13/why-ruby-app-servers-break-on-macos-high-sierra-and-what-can-be-done-about-it/
 - workaround taken from the same site.
 Test suite requires exact version match of freetype built against (2.6.1),
 set by local_freetype=True in setup.cfg, to ensure correct image comparison.
 Enforced here by MPLLOCALFREETYPE set with a hack from SetMFLAGS in InfoTest.
 1-2 Failures and Errors in 2.1.1.
<<
Homepage: http://matplotlib.sf.net
DescUsage: <<
 To use within IPython, invoke as `ipython --matplotlib[=backend]` or
 `ipython --pylab[=backend]`, where backend is one of
 ['auto', 'gtk', 'gtk3', 'inline', 'nbagg', 'qt', 'qt4', 'tk', 'wx']
 (as far as installed - not all of these are available with Python3.x; the
 Qt5Agg backend currently does not work with IPython's %matplotlib magic).
<<
# Info2
<<
