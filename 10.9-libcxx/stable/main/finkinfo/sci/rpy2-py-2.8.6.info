Info2: <<

Package: rpy2-py%type_pkg[python]
Version: 2.8.6
Revision: 1
Description: Python module to access R (3.4) functions
License: OSI-Approved
Homepage: http://rpy2.bitbucket.org
Maintainer: BABA Yoshihiko <babayoshihiko@mac.com>

Type: python (2.7 3.4 3.5 3.6)

BuildDepends: fink (>= 0.24.12-1), r-base34-dev, r-base34, libicu55-dev
Depends: <<
	python%type_pkg[python], 
	r-base34, 
	numpy-py%type_pkg[python] (>= 1.3.0-7), 
	libicu55-shlibs, 
	six-py%type_pkg[python], 
	( %type_pkg[python] <= 33 ) singledispatch-py%type_pkg[python] (>= 3.4.0-1)
<<
Recommends: cran-ggplot2-r34, cran-hexbin-r34, pandas-py%type_pkg[python]

Source: https://bitbucket.org/rpy2/rpy2/get/RELEASE_2_8_6.tar.bz2
SourceDirectory: rpy2-rpy2-4b7a35dbe68f
Source-MD5: c31b89bb585c22b29a79e3a9b244df12
#Source: https://pypi.io/packages/source/r/rpy2/rpy2-%v.tar.gz
PatchScript: <<
#!/bin/bash -ev
  perl -pi -e 's|(_get_r_home\()(\))|${1}"%p/Library/Frameworks/R.framework/Versions/3.4/Resources/bin/R")|' setup.py
  # unicode tests are marked skip for Python 2, but unittest.loader still throws a LoadTestsFailure
  # on detecting the non-ASCII chars, so remove them here:
  if [ %type_pkg[python] -lt 30 ]; then
    perl -pi -e "s/(u\'..+\')/'_unicode_'/g;" rpy/rinterface/tests/test_Sexp{Closure,Environment}.py
  fi
<<

SetLDFLAGS: -L%p/Library/Frameworks/R.framework/Versions/3.4/Resources/lib -undefined dynamic_lookup

CompileScript: <<
#!/bin/bash -ev
  %p/bin/python%type_raw[python] setup.py build
<<
InstallScript: <<
#!/bin/bash -ev
  find %b/build/lib.macosx-*-%type_raw[python] -name '*.py[oc]' -exec rm {} \;
  %p/bin/python%type_raw[python] setup.py install --root=%d --install-data=%i/lib/python%type_raw[python]/r-base --no-compile 
<<

InfoTest: <<
 TestDepends: cran-ggplot2-r34 (>= 1.0.1), cran-dplyr-r34 (>= 0.7.2-1), cran-rsqlite-r34
 TestScript: <<
  PYTHONPATH=$(ls -d %b/build/lib.macosx-*-%type_raw[python]) %p/bin/python%type_raw[python] -B -m rpy2.tests
 <<
 TestSuiteSize: small
<<

DocFiles: AUTHORS NEWS README.rst

DescDetail: <<
RPy is a very simple, yet robust, interface to the R Programming Language.
It can manage all kinds of R objects and can execute arbitrary R functions
(including the graphic functions). All the errors from the R language are 
converted to Python exceptions. 

RPy2 is a redesign/rewrite of RPy, providing not only high-level interfaces
to R but also a lower-level interface upon which build custom high-level
interfaces.

Doesn't work with quartz graphics device (need a Framework build of python 
for that).
<<
DescPort: <<
Added singledispatch-py dependency for py27 type.
Patched setup.py to find R executable in %p/Library/Frameworks, but it has
to be in PATH at runtime, therefore r-base dependency.
Removed unicode strings in tests for py27 type, because otherwise unittest
will already fail on loading.
<<

<<
