# -*- coding: ascii; tab-width: 4 -*-
Info4: <<
Package: jedi-py%type_pkg[python]
Version: 0.12.0
Revision: 1
Type: python (2.7 3.4 3.5 3.6)

Description: Python autocompletion tool for editors etc.
DescDetail: <<
Jedi is a static analysis tool for Python that can be used in IDEs/editors.
Its historic focus is autocompletion, but it does static analysis for now as
well. Jedi is fast and is very well tested. It understands Python on a deeper
level than all other static analysis frameworks for Python.
Jedi has support for two different goto functions. It is possible to search
for related names and to list all names in a Python file and infer them.
Jedi understands docstrings and you can use Jedi autocompletion in your REPL
as well. Jedi uses a very simple API to connect with IDEs. There is a
reference implementation as a VIM-Plugin, which uses Jedi's autocompletion, on
https://github.com/davidhalter/jedi-vim
We encourage you to use Jedi in your IDEs. It's really easy.
Jedi can currently be used with Vim, Emacs, Kate, Ipython 6+ and many more.
<<
Maintainer: Derek Homeier <dhomeie@gwdg.de>
License: OSI-Approved
Homepage: https://github.com/davidhalter/jedi

Source: https://pypi.io/packages/source/j/jedi/jedi-%v.tar.gz
Source-MD5: 02b984f37bf24106a65a14f16c948a8b
Source-Checksum: SHA256(1972f694c6bc66a2fac8718299e2ab73011d653a6d8059790c3476d2353b99ad)

Depends: python%type_pkg[python], docopt-py%type_pkg[python], parso-py%type_pkg[python]
BuildDepends: fink (>= 0.24.12)

CompileScript: %p/bin/python%type_raw[python] setup.py build

InfoTest: <<
    TestDepends: pytest-py%type_pkg[python], tox-py%type_pkg[python]
    # loads of errors with tox which keeps trying to write into $HOME/Library/caches
    # mkdir -p Library/caches
    # TOX_TESTENV_PASSENV="PYTHONPATH=%b/build/lib HOME=%b" %p/bin/tox-py%type_pkg[python] -e py%type_pkg[python] || exit 2
    # with run-tests, all default tests succeed, with '--thirdparty' 14 Failures in jedi_.py and pylab_.py
    TestScript: <<
        #!/bin/bash -ev
        echo "backend: QT5Agg" > matplotlibrc
        PYTHONPATH=build/lib %p/bin/python%type_raw[python] test/run.py --thirdparty || exit 1
    <<
<<

InstallScript: <<
    find build/lib -name '*.pyc' -exec rm {} \;
    %p/bin/python%type_raw[python] setup.py install --root=%d
<<

DocFiles: LICENSE.txt AUTHORS.txt README.rst CHANGELOG.rst PKG-INFO docs/docs

# Info4
<<
