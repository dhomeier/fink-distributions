Info3: <<

Package: testpath-py%type_pkg[python]
Version: 0.3.1
Revision: 1
Maintainer: Derek Homeier <dhomeie@gwdg.de>
License: BSD
Type: python (2.7 3.4 3.5 3.6)
Homepage: https://pypi.python.org/pypi/testpath
#Source: https://github.com/jupyter/testpath/archive/%v.tar.gz
#Source-MD5: b39b572b7e22570e679b924b6ed2dcdc
#SourceRename: testpath-%v.tar.gz
Source: https://pypi.io/packages/source/t/testpath/testpath-%v.tar.gz
Source-MD5: 2cd5ed5522fda781bb497c9d80ae2fc9

Depends: python%type_pkg[python]-shlibs
BuildDepends: python%type_pkg[python]

# no setup.py!
# %p/bin/pip-py%type_raw[python] install testpath --prefix %i --no-binary all
# keeps reinventing or at least downloading the wheel...
# install manually and create a minimall .egg-info file for the package to be visible to setuptools - 
# pkg_resources.load_entry_point in particular fails to find the distribution otherwise, see also
# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=880241

CompileScript: <<
   #!/bin/sh -ev
   echo "Metadata-Version: 1.2\nName: testpath\nVersion: %v" > METADATA
   echo "Summary: Test utilities for code working with files and commands" >> METADATA
   echo "Home-page: https://github.com/jupyter/testpath\nLicense: MIT" >> METADATA
   echo "Author: Jupyter Development Team\nAuthor-email: jupyter@googlegroups.com" >> METADATA
   awk -F '=' '$1~/classifiers/{print "Classifier:    ", $2}$1~/::/{print "Classifier: ", $1}' flit.ini >> METADATA
   cat README.rst >> METADATA
<<

InstallScript: <<
   #!/bin/sh -ev
   mkdir -m 755 -p %i/lib/python%type_raw[python]/site-packages/testpath
   install -m 644 testpath/__init__.py testpath/[a-t]*.py %i/lib/python%type_raw[python]/site-packages/testpath
   install -m 644 METADATA %i/lib/python%type_raw[python]/site-packages/testpath-%v-py%type_pkg[python].egg-info
   cd %i
   %p/bin/python%type_raw[python] -m compileall -d %p lib/python%type_raw[python]/site-packages/testpath
<<

InfoTest: <<
  TestDepends: pytest-py%type_pkg[python], ( %type_pkg[python] <= 27 ) pathlib2-py%type_pkg[python]
  TestScript: <<
   #!/bin/bash -ev
   PYTHONPATH=testpath %p/bin/py.test-%type_raw[python] || exit 2
   # find testpath -name '*.py[oc]' -exec rm {} \;
  <<
  TestSuiteSize: small
<<

Description: Test utilities for files and commands code

DescDetail: <<
Testpath is a collection of utilities for Python code working with files and
commands. It contains functions to check things on the filesystem, and tools
for mocking system commands and recording calls to those.
<<

DescPackaging: <<
 Only Wheel on PyPI; no setup.py in (archived) github source as of 0.3,
 therefore ugly installation hack!
<<

DocFiles: README.rst doc

# Info3
<<
