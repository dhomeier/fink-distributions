# -*- coding: ascii; tab-width: 4 -*-
Info3: <<

Package: webencodings-py%type_pkg[python]
Version: 0.5.1
Revision: 1
Maintainer: Derek Homeier <dhomeie@gwdg.de>
License: BSD
Type: python (2.7 3.4 3.5 3.6)
Homepage: https://github.com/SimonSapin/python-webencodings
Source: https://pypi.io/packages/source/w/webencodings/webencodings-%v.tar.gz
Source-MD5: 32f6e261d52e57bf7e1c4d41546d15b8

Depends: python%type_pkg[python]-shlibs
BuildDepends: python%type_pkg[python], setuptools-tng-py%type_pkg[python]

Description: Character encoding aliases for legacy pages

DescDetail: <<
This is a Python implementation of the WHATWG Encoding standard.
In order to be compatible with legacy web content when interpreting something
like `Content-Type: text/html; charset=latin1`, tools need to use a particular
set of aliases for encoding labels as well as some overriding rules. For example,
`US-ASCII` and `iso-8859-1` on the web are actually aliases for `windows-1252`, and
an `UTF-8` or `UTF-16 BOM` takes precedence over any other encoding declaration.
The Encoding standard defines all such details so that implementations do not
have to reverse-engineer each other.

This module has encoding labels and BOM detection, but the actual implementation
for encoders and decoders is Python's.

Latest documentation: http://packages.python.org/webencodings/
<<

CompileScript: python%type_raw[python] setup.py build

InstallScript: %p/bin/python%type_raw[python] setup.py install --root=%d

InfoTest: <<
  TestDepends: nose-py%type_pkg[python]
  TestScript: <<
    %p/bin/python%type_raw[python] setup.py nosetests || exit 1
  <<
  TestSuiteSize: small
<<

DocFiles: README.rst
# Info3
<<
