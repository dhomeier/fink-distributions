Info3: <<

Package: entrypoints-py%type_pkg[python]
Version: 0.2.3
Revision: 1
Maintainer: Derek Homeier <dhomeie@gwdg.de>
License: BSD
Type: python (2.7 3.4 3.5 3.6)
Homepage: https://pypi.python.org/pypi/entrypoints
#Source: https://github.com/takluyver/entrypoints/archive/%v.tar.gz
#SourceRename: entrypoints-%v.tar.gz
#Source-MD5: ad31adbe634709555c400de125098dc8
Source: https://pypi.io/packages/source/e/entrypoints/entrypoints-%v.tar.gz
Source-MD5: 0d3ad1b0130d91e3596ef3a59f25a56c

Depends: <<
  python%type_pkg[python]-shlibs,
  ( %type_pkg[python] <= 32 ) configparser-py%type_pkg[python]
<<
BuildDepends: python%type_pkg[python], setuptools-tng-py%type_pkg[python]

# install manually and create a minimall .egg-info file for the package to be visible to setuptools - 
# pkg_resources.load_entry_point in particular fails to find the distribution otherwise

CompileScript: <<
   #!/bin/sh -ev
   cp PKG-INFO METADATA
   echo "License: MIT" >> METADATA
   awk -F '=' '$1~/classifiers/{print "Classifier:    ", $2}$1~/::/{print "Classifier: ", $1}' flit.ini >> METADATA
<<

InstallScript: <<
   #!/bin/sh -ev
   mkdir -m 755 -p %i/lib/python%type_raw[python]/site-packages
   install -m 644 entrypoints.py %i/lib/python%type_raw[python]/site-packages
   install -m 644 METADATA %i/lib/python%type_raw[python]/site-packages/entrypoints-%v-py%type_pkg[python].egg-info
   cd %i
   %p/bin/python%type_raw[python] -m compileall -d %p lib/python%type_raw[python]/site-packages/entrypoints.py
<<

InfoTest: <<
  TestDepends: pytest-py%type_pkg[python]
  TestScript: <<
   PYTHONPATH=build/lib %p/bin/py.test-%type_raw[python]
   find . -name '*.py[oc]' -exec rm {} \;
  <<
  TestSuiteSize: small
<<

DocFiles: PKG-INFO doc/*.rst
# FIX: build the docs with sphinx

Description: Load entry points from installed packages

DescDetail: <<
Module for discovering and loading entry points from installed packages.
Entry points are a way for Python packages to advertise objects with some
common interface. The most common examples are console_scripts entry points,
which define shell commands by identifying a Python function to run.

Groups of entry points, such as console_scripts, point to objects with similar
interfaces. An application might use a group to find its plugins, or multiple
groups if it has different kinds of plugins.

The entrypoints module contains functions to find and load entry points.
To advertise entry points when distributing a package, see entry_points in the
Python Packaging User Guide.
<<

DescPackaging: <<
 Only Wheel on PyPI; no setup.py in (archived) github source as of 0.2.2,
 therefore ugly installation hack!
<<

# Info3
<<
